name: "baseline"

layer {
	name: "data"
  	type: "HDF5Data"
  	top: "depth"
  	top: "joint"
  	top: "com"
  	top: "inds"
  	hdf5_data_param {
    	source:"/home/wuyiming/git/Hand/dataset/cache/ICVL_train.txt"
    	batch_size: 512
  	}
  	include {
    	phase: TRAIN
  	}
}

layer {
  	name: "data"
  	type: "HDF5Data"
  	top: "depth"
  	top: "joint"
  	top: "com"
  	top: "inds"
  	hdf5_data_param {
    	source:"/home/wuyiming/git/Hand/dataset/cache/ICVL_test.txt"
	    batch_size: 64
  	}
  	include {
    	phase: TEST
  	}
}
# conv1

layer {
	name: "conv1_1"
	type: "Convolution"
	bottom: "depth"
	top: "conv1_1"
	convolution_param {
		num_output: 16
		kernel_size: 3
		pad: 1
		weight_filler {
			type: "xavier"
		}
		bias_filler {
			type: "constant"
		}
	}
}

layer {
	name: "relu_conv1_1"
	type: "ReLU"
	bottom: "conv1_1"
	top: "conv1_1"
}

layer {
	name: "conv1_2"
	type: "Convolution"
	bottom: "conv1_1"
	top: "conv1_2"
	convolution_param {
		num_output: 16
		kernel_size: 3
		pad: 1
		weight_filler {
			type: "xavier"
		}
		bias_filler {
			type: "constant"
		}
	}	
}

layer {
	name: "relu_conv1_2"
	type: "ReLU"
	bottom: "conv1_2"
	top: "conv1_2"
}

layer {
	name: "pool1"
	type: "Pooling"
	bottom: "conv1_2"
	top: "pool1"
	pooling_param {
		pool: MAX
		kernel_size: 3
		stride: 2
	}
}

# conv2

layer {
	name: "res2_branch1"
	type: "Convolution"
	bottom: "pool1"
	top: "res2_branch1"
	convolution_param {
		num_output: 32
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
		weight_filler {
			type: "xavier"
		}
	}
}

layer {
	name: "res2_branch2a"
	type: "Convolution"
	bottom: "pool1"
	top: "res2_branch2a"
	convolution_param {
		num_output: 32
		kernel_size: 3
		pad: 1
		weight_filler {
			type: "xavier"
		}
		bias_filler {
			type: "constant"
		}
	}
}

layer {
	name: "relu_res2_branch2a"
	type: "ReLU"
	bottom: "res2_branch2a"
	top: "res2_branch2a"
}

layer {
	name: "res2_branch2b"
	type: "Convolution"
	bottom: "res2_branch2a"
	top: "res2_branch2b"
	convolution_param {
		num_output: 32
		kernel_size: 3
		pad: 1
		weight_filler {
			type: "xavier"
		}
		bias_filler {
			type: "constant"
		}
	}
}

layer {
	name: "res2"
	type: "Eltwise"
	bottom: "res2_branch1"
	bottom: "res2_branch2b"
	top: "res2"
}

layer {
	name: "relu_res2"
	type: "ReLU"
	bottom: "res2"
	top: "res2"
}

layer {
	name: "pool2"
	type: "Pooling"
	bottom: "res2"
	top: "pool2"
	pooling_param {
		pool: MAX
		stride: 2
		kernel_size: 3
	}
}

# conv3

layer {
	name: "res3_branch1"
	type: "Convolution"
	bottom: "pool2"
	top: "res3_branch1"
	convolution_param {
		num_output: 64
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
		weight_filler {
			type: "xavier"
		}
	}
}

layer {
	name: "res3_branch2a"
	type: "Convolution"
	bottom: "pool2"
	top: "res3_branch2a"
	convolution_param {
		num_output: 64
		kernel_size: 3
		pad: 1
		weight_filler {
			type: "xavier"
		}
		bias_filler {
			type: "constant"
		}
	}
}

layer {
	name: "relu_res3_branch2a"
	type: "ReLU"
	bottom: "res3_branch2a"
	top: "res3_branch2a"
}

layer {
	name: "res3_branch2b"
	type: "Convolution"
	bottom: "res3_branch2a"
	top: "res3_branch2b"
	convolution_param {
		num_output: 64
		kernel_size: 3
		pad: 1
		weight_filler {
			type: "xavier"
		}
		bias_filler {
			type: "constant"
		}
	}
}

layer {
	name: "res3"
	type: "Eltwise"
	bottom: "res3_branch1"
	bottom: "res3_branch2b"
	top: "res3"
}

layer {
	name: "relu_res3"
	type: "ReLU"
	bottom: "res3"
	top: "res3"
}

layer {
	name: "pool3"
	type: "Pooling"
	bottom: "res3"
	top: "pool3"
	pooling_param {
		pool: MAX
		stride: 2
		kernel_size: 3
	}
}

layer {
	name: "fc1"
	type: "InnerProduct"
	bottom: "pool3"
	top: "fc1"
	inner_product_param {
		num_output: 2048
		weight_filler {
			type: "xavier"
		}
		bias_filler {
			type: "constant"
		}
	}
}

layer {
	name: "drop1"
    type: "Dropout"
    bottom: "fc1"
    top: "fc1"
    dropout_param {
    	dropout_ratio: 0.5
    }
}

layer {
	name: "fc2"
	type: "InnerProduct"
	bottom: "fc1"
	top: "fc2"
	inner_product_param {
		num_output: 2048
		weight_filler {
			type: "xavier"
		}
		bias_filler {
			type: "constant"
		}
	}
}

layer {
	name: "drop2"
    type: "Dropout"
    bottom: "fc2"
    top: "fc2"
    dropout_param {
    	dropout_ratio: 0.5
    }
}

layer {
	name: "pred"
    type: "InnerProduct"
    bottom: "fc2"
    top: "joint_pred"
    inner_product_param {
    	num_output: 48 # 3*J
    }
}

layer {
	name: "dummyloss"
	type: "EuclideanLoss"
	bottom: "joint_pred"
	bottom: "joint"
	top: "dummyloss"
	loss_weight: 0
}

layer {
	name: "loss"
	type: "EuclideanLoss"
	bottom: "joint_pred"
	bottom: "joint"
	top: "loss"
}

layer {
	name: "ignore"
	type: "Silence"
	bottom: "inds"
	bottom: "com"
}
