name: "baseline"

layer {
    name: "data"
    type: "Python"
    top: "depth"
    top: "gtorig"
    top: "gtcrop"
    top: "T"
    top: "gt3Dorig"
    top: "gt3Dcrop"
    top: "joint"
    top: "clip_markers"
    top: "com"
    top: "config"
    top: "inds"
    python_param {
        module: "data_input_layer"
        layer: "NYUTrainSeq"
        param_str: '{"buffer_size": "512", "frame_size": "1", "shuffle": "true", "size": "96"}'
    }
    include: {
        phase: TRAIN
    }
}

layer {
    name: "data"
    type: "Python"
    top: "depth"
    top: "gtorig"
    top: "gtcrop"
    top: "T"
    top: "gt3Dorig"
    top: "gt3Dcrop"
    top: "joint"
    top: "clip_markers"
    top: "com"
    top: "config"
    top: "inds"
    python_param {
        module: "data_input_layer"
        layer: "NYUTestSeq"
        param_str: '{"buffer_size": "64", "frame_size": "1", "shuffle": "true", "size": "96"}'
    }
    include: {
        phase: TEST
    }
}

layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "depth"
  top: "conv1_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    pad: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu_conv1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 16
    kernel_size: 3
    pad: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "relu_pool1"
  type: "ReLU"
  bottom: "pool1"
  top: "pool1"
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
   bias_filler {
     type: "constant"
   }
  }
}
layer {
  name: "relu_conv2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    pad: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
   bias_filler {
     type: "constant"
   }
  }
}
layer {
  name: "relu_conv2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "conv2_3"
  type: "Convolution"
  bottom: "conv2_2"
  top: "conv2_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    pad: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
   bias_filler {
     type: "constant"
   }
  }
}
layer {
  name: "res1"
  type: "Eltwise"
  bottom: "conv2_1"
  bottom: "conv2_3"
  top: "res1"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "res1"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "relu_pool2"
  type: "ReLU"
  bottom: "pool2"
  top: "pool2"
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
   bias_filler {
     type: "constant"
   }
  }
}
layer {
  name: "relu_conv3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
   bias_filler {
     type: "constant"
   }
  }
}
layer {
  name: "relu_conv3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
   bias_filler {
     type: "constant"
   }
  }
}
layer {
  name: "res2"
  type: "Eltwise"
  bottom: "conv3_1"
  bottom: "conv3_3"
  top: "res2"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "res2"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "relu_pool3"
  type: "ReLU"
  bottom: "pool3"
  top: "pool3"
}
layer {
  name: "fc1"
  type: "InnerProduct"
  bottom: "pool3"
  top: "fc1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2048
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "relu_fc1"
  type: "ReLU"
  bottom: "fc1"
  top: "fc1"
}

layer {
  name: "drop1"
  type: "Dropout"
  bottom: "fc1"
  top: "fc1"
  dropout_param {
    dropout_ratio: 0.5
  }
}

layer {
  name: "fc2"
  type: "InnerProduct"
  bottom: "fc1"
  top: "fc2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2048
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "relu_fc2"
  type: "ReLU"
  bottom: "fc2"
  top: "fc2"
}

layer {
  name: "drop2"
  type: "Dropout"
  bottom: "fc2"
  top: "fc2"
  dropout_param {
    dropout_ratio: 0.5
  }
}

layer {
  name: "fc3"
  type: "InnerProduct"
  bottom: "fc2"
  top: "fc3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 42
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "joint_pred"
  type: "Reshape"
  bottom: "fc3"
  top: "joint_pred"
  reshape_param {
    shape {
      dim: 0
      dim: 14
      dim: -1
    }
  }
}

layer {
  name: "loss"
  type: "SmoothL1Loss"
  bottom: "joint_pred"
  bottom: "joint"
  top: "loss"
  smooth_l1_loss_param {
    sigma: 10
  }
  loss_weight: 1
}

layer {
	name: "ignore"
	type: "Silence"
	bottom: "inds"
	bottom: "com"
	bottom: "config"
	bottom: "clip_markers"
	bottom: "gtorig"
    bottom: "gtcrop"
    bottom: "T"
    bottom: "gt3Dorig"
    bottom: "gt3Dcrop"
}

